{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGood","selectGood","good","setState","removeGood","this","className","type","onClick","goodsFromServer","map","isSelected","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uPAAe,GACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,OCAWA,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEH,aAAcE,KANlC,EASEE,WAAa,WACX,EAAKD,SAAS,CAAEH,aAAc,MAVlC,4CAaE,WAAU,IAAD,OACCA,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,uBAAhB,UACE,yBAAQA,UAAU,4BAAlB,UACE,oBAAIA,UAAU,aAAd,SACGN,EAAY,UAAMK,KAAKN,MAAMC,aAAjB,gBAA8C,sBAG5DA,GACC,wBACEO,KAAK,SACLD,UAAU,8BACVE,QAASH,KAAKD,WAHhB,sBAWJ,6BACGK,EAAgBC,KAAI,SAAAR,GACnB,IAAMS,EAAaT,IAASF,EAE5B,OACE,qBAEEM,UAAWM,IACT,OACA,CACE,eAAgBZ,IAAiBE,IALvC,UASGA,EAEAS,EAEG,wBACEJ,KAAK,SACLD,UAAU,gCACVE,QAAS,EAAKJ,WAHhB,oBASA,wBACEG,KAAK,SACLD,UAAU,iCACVE,QAAS,kBAAM,EAAKP,WAAWC,IAHjC,sBArBCA,eAzCrB,GAAyBW,IAAMC,WCP/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cd3ff300.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGood: string | null;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  selectGood = (good: string) => {\n    this.setState({ selectedGood: good });\n  };\n\n  removeGood = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"App panel is-primary\">\n        <header className=\"App__header panel-heading\">\n          <h1 className=\"App__title\">\n            {selectedGood ? `${this.state.selectedGood} is selected` : 'No goods selected'}\n          </h1>\n\n          {selectedGood && (\n            <button\n              type=\"button\"\n              className=\"App__clear button is-danger\"\n              onClick={this.removeGood}\n            >\n              Clear\n            </button>\n          )}\n\n        </header>\n\n        <ul>\n          {goodsFromServer.map(good => {\n            const isSelected = good === selectedGood;\n\n            return (\n              <li\n                key={good}\n                className={classNames(\n                  'Good',\n                  {\n                    'Good--active': selectedGood === good,\n                  },\n                )}\n              >\n                {good}\n\n                {isSelected\n                  ? (\n                    <button\n                      type=\"button\"\n                      className=\"Good__remove button is-danger\"\n                      onClick={this.removeGood}\n                    >\n                      Remove\n                    </button>\n                  )\n                  : (\n                    <button\n                      type=\"button\"\n                      className=\"Good__select button is-primary\"\n                      onClick={() => this.selectGood(good)}\n                    >\n                      Select\n                    </button>\n                  )}\n              </li>\n            );\n          })}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}