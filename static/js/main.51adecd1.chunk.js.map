{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGoods","clearGoods","setState","selectGood","good","removeGood","filter","item","chooseTitle","length","slice","join","this","className","type","onClick","goodsFromServer","map","isSelected","includes","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8PAAe,GACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,OCAWA,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAKEC,WAAa,WACX,EAAKC,SAAS,CAAEF,cAAe,MANnC,EASEG,WAAa,SAACC,GACZ,EAAKF,UAAS,SAAAH,GACZ,MAAO,CAAEC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BI,SAXvD,EAeEC,WAAa,SAACD,GACZ,EAAKF,UAAS,SAAAH,GACZ,MAAO,CACLC,cAAeD,EAAMC,cAClBM,QAAO,SAAAC,GAAI,OAAIA,IAASH,UAnBnC,EAwBEI,YAAc,WACZ,IAAQR,EAAkB,EAAKD,MAAvBC,cAER,OAA6B,IAAzBA,EAAcS,OACT,oBAGoB,IAAzBT,EAAcS,OACV,GAAN,OAAUT,EAAc,GAAxB,gBAGI,GAAN,OAAUA,EAAcU,MAAM,GAAI,GAAGC,KAAK,KAA1C,gBAAsDX,EAAcA,EAAcS,OAAS,GAA3F,kBAnCJ,4CAsCE,WAAU,IAAD,OACCT,EAAkBY,KAAKb,MAAvBC,cAER,OACE,uBAAMa,UAAU,uBAAhB,UACE,yBAAQA,UAAU,4BAAlB,UACE,oBAAIA,UAAU,aAAd,SACGD,KAAKJ,gBAGPR,EAAcS,OAAS,GACtB,wBACEK,KAAK,SACLD,UAAU,8BACVE,QAASH,KAAKX,WAHhB,sBAWJ,6BACGe,EAAgBC,KAAI,SAAAb,GACnB,IAAMc,EAAalB,EAAcmB,SAASf,GAE1C,OACE,qBAEES,UAAWO,IACT,OACA,CACE,eAAgBpB,EAAcmB,SAASf,KAL7C,UASGA,EAEAc,EAEG,wBACEJ,KAAK,SACLD,UAAU,gCACVE,QAAS,kBAAM,EAAKV,WAAWD,IAHjC,oBASA,wBACEU,KAAK,SACLD,UAAU,iCACVE,QAAS,kBAAM,EAAKZ,WAAWC,IAHjC,sBArBCA,eAlErB,GAAyBiB,IAAMC,WCP/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.51adecd1.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGoods: string[];\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  clearGoods = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  selectGood = (good: string) => {\n    this.setState(state => {\n      return { selectedGoods: [...state.selectedGoods, good] };\n    });\n  };\n\n  removeGood = (good: string) => {\n    this.setState(state => {\n      return {\n        selectedGoods: state.selectedGoods\n          .filter(item => item !== good),\n      };\n    });\n  };\n\n  chooseTitle = () => {\n    const { selectedGoods } = this.state;\n\n    if (selectedGoods.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (selectedGoods.length === 1) {\n      return `${selectedGoods[0]} is selected`;\n    }\n\n    return `${selectedGoods.slice(0, -1).join(',')} and ${selectedGoods[selectedGoods.length - 1]} are selected`;\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <main className=\"App panel is-primary\">\n        <header className=\"App__header panel-heading\">\n          <h1 className=\"App__title\">\n            {this.chooseTitle()}\n          </h1>\n\n          {selectedGoods.length > 0 && (\n            <button\n              type=\"button\"\n              className=\"App__clear button is-danger\"\n              onClick={this.clearGoods}\n            >\n              Clear\n            </button>\n          )}\n\n        </header>\n\n        <ul>\n          {goodsFromServer.map(good => {\n            const isSelected = selectedGoods.includes(good);\n\n            return (\n              <li\n                key={good}\n                className={classNames(\n                  'Good',\n                  {\n                    'Good--active': selectedGoods.includes(good),\n                  },\n                )}\n              >\n                {good}\n\n                {isSelected\n                  ? (\n                    <button\n                      type=\"button\"\n                      className=\"Good__remove button is-danger\"\n                      onClick={() => this.removeGood(good)}\n                    >\n                      Remove\n                    </button>\n                  )\n                  : (\n                    <button\n                      type=\"button\"\n                      className=\"Good__select button is-primary\"\n                      onClick={() => this.selectGood(good)}\n                    >\n                      Select\n                    </button>\n                  )}\n              </li>\n            );\n          })}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}